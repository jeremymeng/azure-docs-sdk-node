### YamlMime:TSPackage
uid: '@azure/core-http'
name: '@azure/core-http'
summary: ''
type: package
classes:
  - '@azure/core-http.BrowserFetchHttpClient'
  - '@azure/core-http.ExpiringAccessTokenCache'
  - '@azure/core-http.AccessTokenRefresher'
  - '@azure/core-http.ApiKeyCredentials'
  - '@azure/core-http.BasicAuthenticationCredentials'
  - '@azure/core-http.TopicCredentials'
  - '@azure/core-http.FetchHttpClient'
  - '@azure/core-http.ReportTransform'
  - '@azure/core-http.HttpHeaders'
  - '@azure/core-http.ConsoleHttpPipelineLogger'
  - '@azure/core-http.NodeFetchHttpClient'
  - '@azure/core-http.DeserializationPolicy'
  - '@azure/core-http.DisableResponseDecompressionPolicy'
  - '@azure/core-http.ExponentialRetryPolicy'
  - '@azure/core-http.GenerateClientRequestIdPolicy'
  - '@azure/core-http.KeepAlivePolicy'
  - '@azure/core-http.LogPolicy'
  - '@azure/core-http.ProxyPolicy'
  - '@azure/core-http.RedirectPolicy'
  - '@azure/core-http.BaseRequestPolicy'
  - '@azure/core-http.RequestPolicyOptions'
  - '@azure/core-http.RPRegistrationPolicy'
  - '@azure/core-http.SigningPolicy'
  - '@azure/core-http.SystemErrorRetryPolicy'
  - '@azure/core-http.ThrottlingRetryPolicy'
  - '@azure/core-http.TracingPolicy'
  - '@azure/core-http.UserAgentPolicy'
  - '@azure/core-http.RestError'
  - '@azure/core-http.Serializer'
  - '@azure/core-http.ServiceClient'
  - '@azure/core-http.URLBuilder'
  - '@azure/core-http.URLQuery'
  - '@azure/core-http.URLToken'
  - '@azure/core-http.URLTokenizer'
  - '@azure/core-http.Sanitizer'
  - '@azure/core-http.WebResource'
  - '@azure/core-http.XhrHttpClient'
interfaces:
  - '@azure/core-http.AccessTokenCache'
  - '@azure/core-http.ApiKeyCredentialOptions'
  - '@azure/core-http.ServiceClientCredentials'
  - '@azure/core-http.HttpClient'
  - '@azure/core-http.HttpHeader'
  - '@azure/core-http.HttpHeadersLike'
  - '@azure/core-http.HttpOperationResponse'
  - '@azure/core-http.HttpResponse'
  - '@azure/core-http.RestResponse'
  - '@azure/core-http.HttpPipelineLogger'
  - '@azure/core-http.OperationArguments'
  - '@azure/core-http.OperationOptions'
  - '@azure/core-http.OperationRequestOptions'
  - '@azure/core-http.OperationParameter'
  - '@azure/core-http.OperationQueryParameter'
  - '@azure/core-http.OperationURLParameter'
  - '@azure/core-http.OperationResponse'
  - '@azure/core-http.OperationSpec'
  - '@azure/core-http.InternalPipelineOptions'
  - '@azure/core-http.PipelineOptions'
  - '@azure/core-http.TokenCyclerOptions'
  - '@azure/core-http.DeserializationContentTypes'
  - '@azure/core-http.DeserializationOptions'
  - '@azure/core-http.RetryOptions'
  - '@azure/core-http.KeepAliveOptions'
  - '@azure/core-http.LogPolicyOptions'
  - '@azure/core-http.RedirectOptions'
  - '@azure/core-http.RequestPolicy'
  - '@azure/core-http.RequestPolicyOptionsLike'
  - '@azure/core-http.TracingPolicyOptions'
  - '@azure/core-http.UserAgentOptions'
  - '@azure/core-http.BaseMapper'
  - '@azure/core-http.CompositeMapper'
  - '@azure/core-http.CompositeMapperType'
  - '@azure/core-http.DictionaryMapper'
  - '@azure/core-http.DictionaryMapperType'
  - '@azure/core-http.EnumMapper'
  - '@azure/core-http.EnumMapperType'
  - '@azure/core-http.MapperConstraints'
  - '@azure/core-http.PolymorphicDiscriminator'
  - '@azure/core-http.SequenceMapper'
  - '@azure/core-http.SequenceMapperType'
  - '@azure/core-http.SimpleMapperType'
  - '@azure/core-http.UrlParameterValue'
  - '@azure/core-http.ProxySettings'
  - '@azure/core-http.ServiceClientOptions'
  - '@azure/core-http.RetryData'
  - '@azure/core-http.RetryError'
  - '@azure/core-http.SanitizerOptions'
  - '@azure/core-http.SerializerOptions'
  - '@azure/core-http.ServiceCallback'
  - '@azure/core-http.ParameterValue'
  - '@azure/core-http.RequestOptionsBase'
  - '@azure/core-http.RequestPrepareOptions'
  - '@azure/core-http.WebResourceLike'
typeAliases:
  - '@azure/core-http.Authenticator'
  - '@azure/core-http.CommonRequestInfo'
  - '@azure/core-http.CommonRequestInit'
  - '@azure/core-http.CommonResponse'
  - '@azure/core-http.RawHttpHeaders'
  - '@azure/core-http.ParameterPath'
  - '@azure/core-http.RequestPolicyFactory'
  - '@azure/core-http.ResponseHandler'
  - '@azure/core-http.TelemetryInfo'
  - '@azure/core-http.ProxyAgent'
  - '@azure/core-http.Mapper'
  - '@azure/core-http.MapperType'
  - '@azure/core-http.PropertyParent'
  - '@azure/core-http.ProxyOptions'
  - '@azure/core-http.URLTokenType'
  - '@azure/core-http.URLTokenizerState'
  - '@azure/core-http.HttpMethods'
  - '@azure/core-http.HttpRequestBody'
  - '@azure/core-http.TransferProgressEvent'
functions:
  - name: parseHeaders(XMLHttpRequest)
    uid: '@azure/core-http.parseHeaders'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function parseHeaders(xhr: XMLHttpRequest)'
      parameters:
        - id: xhr
          type: XMLHttpRequest
          description: ''
      return:
        type: <xref uid="@azure/core-http.HttpHeadersLike" />
        description: ''
  - name: getCachedDefaultHttpClient()
    uid: '@azure/core-http.getCachedDefaultHttpClient'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getCachedDefaultHttpClient()
      return:
        type: <xref uid="@azure/core-http.HttpClient" />
        description: ''
  - name: isHttpHeadersLike(unknown)
    uid: '@azure/core-http.isHttpHeadersLike'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isHttpHeadersLike(object?: unknown)'
      parameters:
        - id: object
          type: unknown
          description: ''
      return:
        type: boolean
        description: ''
  - name: operationOptionsToRequestOptionsBase<T>(T)
    uid: '@azure/core-http.operationOptionsToRequestOptionsBase'
    package: '@azure/core-http'
    summary: Converts an OperationOptions to a RequestOptionsBase
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function operationOptionsToRequestOptionsBase<T>(opts: T)'
      parameters:
        - id: opts
          type: T
          description: |
            OperationOptions object to convert to RequestOptionsBase
      return:
        type: <xref uid="@azure/core-http.RequestOptionsBase" />
        description: ''
  - name: getPathStringFromParameter(OperationParameter)
    uid: '@azure/core-http.getPathStringFromParameter'
    package: '@azure/core-http'
    summary: Get the path to this parameter's value as a dotted string (a.b.c).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getPathStringFromParameter(parameter: OperationParameter)'
      parameters:
        - id: parameter
          type: <xref uid="@azure/core-http.OperationParameter" />
          description: The parameter to get the path string for.
      return:
        type: string
        description: The path to this parameter's value as a dotted string.
  - name: 'getPathStringFromParameterPath(ParameterPath, Mapper)'
    uid: '@azure/core-http.getPathStringFromParameterPath'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPathStringFromParameterPath(parameterPath: ParameterPath,
        mapper: Mapper)
      parameters:
        - id: parameterPath
          type: <xref uid="@azure/core-http.ParameterPath" />
          description: ''
        - id: mapper
          type: <xref uid="@azure/core-http.Mapper" />
          description: ''
      return:
        type: string
        description: ''
  - name: getStreamResponseStatusCodes(OperationSpec)
    uid: '@azure/core-http.getStreamResponseStatusCodes'
    package: '@azure/core-http'
    summary: Gets the list of status codes for streaming responses.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getStreamResponseStatusCodes(operationSpec: OperationSpec)'
      parameters:
        - id: operationSpec
          type: <xref uid="@azure/core-http.OperationSpec" />
          description: ''
      return:
        type: Set&lt;number&gt;
        description: ''
  - name: 'bearerTokenAuthenticationPolicy(TokenCredential, string | string[])'
    uid: '@azure/core-http.bearerTokenAuthenticationPolicy'
    package: '@azure/core-http'
    summary: |-
      Creates a new factory for a RequestPolicy that applies a bearer token to
      the requests' `Authorization` headers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function bearerTokenAuthenticationPolicy(credential: TokenCredential,
        scopes: string | string[])
      parameters:
        - id: credential
          type: TokenCredential
          description: The TokenCredential implementation that can supply the bearer token.
        - id: scopes
          type: 'string | string[]'
          description: |
            The scopes for which the bearer token applies.
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: 'deserializationPolicy(DeserializationContentTypes, SerializerOptions)'
    uid: '@azure/core-http.deserializationPolicy'
    package: '@azure/core-http'
    summary: >-
      Create a new serialization RequestPolicyCreator that will serialized HTTP
      request bodies as they

      pass through the HTTP pipeline.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deserializationPolicy(deserializationContentTypes?:
        DeserializationContentTypes, parsingOptions?: SerializerOptions)
      parameters:
        - id: deserializationContentTypes
          type: <xref uid="@azure/core-http.DeserializationContentTypes" />
          description: ''
        - id: parsingOptions
          type: <xref uid="@azure/core-http.SerializerOptions" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: >-
      deserializeResponseBody(string[], string[], HttpOperationResponse,
      SerializerOptions)
    uid: '@azure/core-http.deserializeResponseBody'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deserializeResponseBody(jsonContentTypes: string[],
        xmlContentTypes: string[], response: HttpOperationResponse, options?:
        SerializerOptions)
      parameters:
        - id: jsonContentTypes
          type: 'string[]'
          description: ''
        - id: xmlContentTypes
          type: 'string[]'
          description: ''
        - id: response
          type: <xref uid="@azure/core-http.HttpOperationResponse" />
          description: ''
        - id: options
          type: <xref uid="@azure/core-http.SerializerOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/core-http.HttpOperationResponse" />&gt;
        description: ''
  - name: disableResponseDecompressionPolicy()
    uid: '@azure/core-http.disableResponseDecompressionPolicy'
    package: '@azure/core-http'
    summary: |-
      Returns a request policy factory that can be used to create an instance of
      <xref:DisableResponseDecompressionPolicy>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function disableResponseDecompressionPolicy()
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: 'exponentialRetryPolicy(number, number, number)'
    uid: '@azure/core-http.exponentialRetryPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exponentialRetryPolicy(retryCount?: number, retryInterval?:
        number, maxRetryInterval?: number)
      parameters:
        - id: retryCount
          type: number
          description: ''
        - id: retryInterval
          type: number
          description: ''
        - id: maxRetryInterval
          type: number
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: generateClientRequestIdPolicy(string)
    uid: '@azure/core-http.generateClientRequestIdPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function generateClientRequestIdPolicy(requestIdHeaderName?: string)'
      parameters:
        - id: requestIdHeaderName
          type: string
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: keepAlivePolicy(KeepAliveOptions)
    uid: '@azure/core-http.keepAlivePolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions)'
      parameters:
        - id: keepAliveOptions
          type: <xref uid="@azure/core-http.KeepAliveOptions" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: logPolicy(LogPolicyOptions)
    uid: '@azure/core-http.logPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function logPolicy(loggingOptions?: LogPolicyOptions)'
      parameters:
        - id: loggingOptions
          type: <xref uid="@azure/core-http.LogPolicyOptions" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: getDefaultUserAgentKey()
    uid: '@azure/core-http.getDefaultUserAgentKey'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDefaultUserAgentKey()
      return:
        type: string
        description: ''
  - name: getPlatformSpecificData()
    uid: '@azure/core-http.getPlatformSpecificData'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getPlatformSpecificData()
      return:
        type: '<xref uid="@azure/core-http.TelemetryInfo" />[]'
        description: ''
  - name: ndJsonPolicy()
    uid: '@azure/core-http.ndJsonPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function ndJsonPolicy()
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: getDefaultProxySettings(string)
    uid: '@azure/core-http.getDefaultProxySettings'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDefaultProxySettings(proxyUrl?: string)'
      parameters:
        - id: proxyUrl
          type: string
          description: ''
      return:
        type: <xref uid="@azure/core-http.ProxySettings" /> | undefined
        description: ''
  - name: proxyPolicy(ProxySettings)
    uid: '@azure/core-http.proxyPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function proxyPolicy(proxySettings?: ProxySettings)'
      parameters:
        - id: proxySettings
          type: <xref uid="@azure/core-http.ProxySettings" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: loadNoProxy()
    uid: '@azure/core-http.loadNoProxy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function loadNoProxy()
      return:
        type: 'string[]'
        description: ''
  - name: redirectPolicy(number)
    uid: '@azure/core-http.redirectPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function redirectPolicy(maximumRetries?: number)'
      parameters:
        - id: maximumRetries
          type: number
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: rpRegistrationPolicy(number)
    uid: '@azure/core-http.rpRegistrationPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function rpRegistrationPolicy(retryTimeout?: number)'
      parameters:
        - id: retryTimeout
          type: number
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: signingPolicy(ServiceClientCredentials)
    uid: '@azure/core-http.signingPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function signingPolicy(authenticationProvider: ServiceClientCredentials)'
      parameters:
        - id: authenticationProvider
          type: <xref uid="@azure/core-http.ServiceClientCredentials" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: 'systemErrorRetryPolicy(number, number, number, number)'
    uid: '@azure/core-http.systemErrorRetryPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function systemErrorRetryPolicy(retryCount?: number, retryInterval?:
        number, minRetryInterval?: number, maxRetryInterval?: number)
      parameters:
        - id: retryCount
          type: number
          description: ''
        - id: retryInterval
          type: number
          description: ''
        - id: minRetryInterval
          type: number
          description: ''
        - id: maxRetryInterval
          type: number
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: throttlingRetryPolicy()
    uid: '@azure/core-http.throttlingRetryPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function throttlingRetryPolicy()
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: tracingPolicy(TracingPolicyOptions)
    uid: '@azure/core-http.tracingPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function tracingPolicy(tracingOptions?: TracingPolicyOptions)'
      parameters:
        - id: tracingOptions
          type: <xref uid="@azure/core-http.TracingPolicyOptions" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: getDefaultUserAgentValue()
    uid: '@azure/core-http.getDefaultUserAgentValue'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getDefaultUserAgentValue()
      return:
        type: string
        description: ''
  - name: userAgentPolicy(TelemetryInfo)
    uid: '@azure/core-http.userAgentPolicy'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function userAgentPolicy(userAgentData?: TelemetryInfo)'
      parameters:
        - id: userAgentData
          type: <xref uid="@azure/core-http.TelemetryInfo" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.RequestPolicyFactory" />
        description: ''
  - name: 'createProxyAgent(string, ProxySettings, HttpHeadersLike)'
    uid: '@azure/core-http.createProxyAgent'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createProxyAgent(requestUrl: string, proxySettings:
        ProxySettings, headers?: HttpHeadersLike)
      parameters:
        - id: requestUrl
          type: string
          description: ''
        - id: proxySettings
          type: <xref uid="@azure/core-http.ProxySettings" />
          description: ''
        - id: headers
          type: <xref uid="@azure/core-http.HttpHeadersLike" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.ProxyAgent" />
        description: ''
  - name: 'createTunnel(boolean, boolean, HttpsOverHttpsOptions)'
    uid: '@azure/core-http.createTunnel'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createTunnel(isRequestHttps: boolean, isProxyHttps: boolean,
        tunnelOptions: HttpsOverHttpsOptions)
      parameters:
        - id: isRequestHttps
          type: boolean
          description: ''
        - id: isProxyHttps
          type: boolean
          description: ''
        - id: tunnelOptions
          type: HttpsOverHttpsOptions
          description: ''
      return:
        type: Agent | Agent
        description: ''
  - name: isUrlHttps(string)
    uid: '@azure/core-http.isUrlHttps'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isUrlHttps(url: string)'
      parameters:
        - id: url
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: serializeObject(unknown)
    uid: '@azure/core-http.serializeObject'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function serializeObject(toSerialize: unknown)'
      parameters:
        - id: toSerialize
          type: unknown
          description: ''
      return:
        type: any
        description: ''
  - name: 'createPipelineFromOptions(InternalPipelineOptions, RequestPolicyFactory)'
    uid: '@azure/core-http.createPipelineFromOptions'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPipelineFromOptions(pipelineOptions:
        InternalPipelineOptions, authPolicyFactory?: RequestPolicyFactory)
      parameters:
        - id: pipelineOptions
          type: <xref uid="@azure/core-http.InternalPipelineOptions" />
          description: ''
        - id: authPolicyFactory
          type: <xref uid="@azure/core-http.RequestPolicyFactory" />
          description: ''
      return:
        type: <xref uid="@azure/core-http.ServiceClientOptions" />
        description: ''
  - name: 'flattenResponse(HttpOperationResponse, OperationResponse | undefined)'
    uid: '@azure/core-http.flattenResponse'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function flattenResponse(_response: HttpOperationResponse, responseSpec:
        OperationResponse | undefined)
      parameters:
        - id: _response
          type: <xref uid="@azure/core-http.HttpOperationResponse" />
          description: ''
        - id: responseSpec
          type: <xref uid="@azure/core-http.OperationResponse" /> | undefined
          description: ''
      return:
        type: <xref uid="@azure/core-http.RestResponse" />
        description: ''
  - name: >-
      getOperationArgumentValueFromParameterPath(ServiceClient,
      OperationArguments, ParameterPath, Mapper, Serializer)
    uid: '@azure/core-http.getOperationArgumentValueFromParameterPath'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getOperationArgumentValueFromParameterPath(serviceClient:
        ServiceClient, operationArguments: OperationArguments, parameterPath:
        ParameterPath, parameterMapper: Mapper, serializer: Serializer)
      parameters:
        - id: serviceClient
          type: <xref uid="@azure/core-http.ServiceClient" />
          description: ''
        - id: operationArguments
          type: <xref uid="@azure/core-http.OperationArguments" />
          description: ''
        - id: parameterPath
          type: <xref uid="@azure/core-http.ParameterPath" />
          description: ''
        - id: parameterMapper
          type: <xref uid="@azure/core-http.Mapper" />
          description: ''
        - id: serializer
          type: <xref uid="@azure/core-http.Serializer" />
          description: ''
      return:
        type: any
        description: ''
  - name: 'getPropertyParent(PropertyParent, string[])'
    uid: '@azure/core-http.getPropertyParent'
    package: '@azure/core-http'
    summary: >-
      Get the property parent for the property at the provided path when
      starting with the provided

      parent object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPropertyParent(parent: PropertyParent, propertyPath:
        string[])
      parameters:
        - id: parent
          type: <xref uid="@azure/core-http.PropertyParent" />
          description: ''
        - id: propertyPath
          type: 'string[]'
          description: ''
      return:
        type: <xref uid="@azure/core-http.PropertyParent" />
        description: ''
  - name: >-
      serializeRequestBody(ServiceClient, WebResourceLike, OperationArguments,
      OperationSpec)
    uid: '@azure/core-http.serializeRequestBody'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function serializeRequestBody(serviceClient: ServiceClient, httpRequest:
        WebResourceLike, operationArguments: OperationArguments, operationSpec:
        OperationSpec)
      parameters:
        - id: serviceClient
          type: <xref uid="@azure/core-http.ServiceClient" />
          description: ''
        - id: httpRequest
          type: <xref uid="@azure/core-http.WebResourceLike" />
          description: ''
        - id: operationArguments
          type: <xref uid="@azure/core-http.OperationArguments" />
          description: ''
        - id: operationSpec
          type: <xref uid="@azure/core-http.OperationSpec" />
          description: ''
  - name: isAlphaNumericCharacter(string)
    uid: '@azure/core-http.isAlphaNumericCharacter'
    package: '@azure/core-http'
    summary: >-
      Get whether or not the provided character (single character string) is an
      alphanumeric (letter or

      digit) character.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isAlphaNumericCharacter(character: string)'
      parameters:
        - id: character
          type: string
          description: ''
      return:
        type: boolean
        description: ''
  - name: decodeString(string)
    uid: '@azure/core-http.decodeString'
    package: '@azure/core-http'
    summary: Decodes a base64 string into a byte array.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function decodeString(value: string)'
      parameters:
        - id: value
          type: string
          description: |
            The base64 string to decode
      return:
        type: Uint8Array
        description: ''
  - name: encodeByteArray(Uint8Array)
    uid: '@azure/core-http.encodeByteArray'
    package: '@azure/core-http'
    summary: Encodes a byte array in base64 format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function encodeByteArray(value: Uint8Array)'
      parameters:
        - id: value
          type: Uint8Array
          description: |
            The Uint8Aray to encode
      return:
        type: string
        description: ''
  - name: encodeString(string)
    uid: '@azure/core-http.encodeString'
    package: '@azure/core-http'
    summary: Encodes a string in base64 format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function encodeString(value: string)'
      parameters:
        - id: value
          type: string
          description: |
            The string to encode
      return:
        type: string
        description: ''
  - name: isNumber(unknown)
    uid: '@azure/core-http.isNumber'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isNumber(n: unknown)'
      parameters:
        - id: 'n'
          type: unknown
          description: ''
      return:
        type: boolean
        description: ''
  - name: >-
      shouldRetry(number, (response?: HttpOperationResponse, error?: RetryError)
      => boolean, RetryData, HttpOperationResponse, RetryError)
    uid: '@azure/core-http.shouldRetry'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function shouldRetry(retryLimit: number, predicate: (response?:
        HttpOperationResponse, error?: RetryError) => boolean, retryData:
        RetryData, response?: HttpOperationResponse, error?: RetryError)
      parameters:
        - id: retryLimit
          type: number
          description: Specifies the max number of retries.
        - id: predicate
          type: '(response?: HttpOperationResponse, error?: RetryError) =&gt; boolean'
          description: >-
            Initial chekck on whether to retry based on given responses or
            errors
        - id: retryData
          type: <xref uid="@azure/core-http.RetryData" />
          description: The retry data.
        - id: response
          type: <xref uid="@azure/core-http.HttpOperationResponse" />
          description: ''
        - id: error
          type: <xref uid="@azure/core-http.RetryError" />
          description: ''
      return:
        type: boolean
        description: True if the operation qualifies for a retry; false otherwise.
  - name: 'updateRetryData(Object, RetryData, RetryError)'
    uid: '@azure/core-http.updateRetryData'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateRetryData(retryOptions: Object, retryData?: RetryData,
        err?: RetryError)
      parameters:
        - id: retryOptions
          type: Object
          description: 'specifies retry interval, and its lower bound and upper bound.'
        - id: retryData
          type: <xref uid="@azure/core-http.RetryData" />
          description: The retry data.
        - id: err
          type: <xref uid="@azure/core-http.RetryError" />
          description: |
            The operation"s error, if any.
      return:
        type: <xref uid="@azure/core-http.RetryData" />
        description: ''
  - name: 'applyMixins(unknown, any[])'
    uid: '@azure/core-http.applyMixins'
    package: '@azure/core-http'
    summary: >-
      Applies the properties on the prototype of sourceCtors to the prototype of
      targetCtor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function applyMixins(targetCtorParam: unknown, sourceCtors: any[])'
      parameters:
        - id: targetCtorParam
          type: unknown
          description: ''
        - id: sourceCtors
          type: 'any[]'
          description: >
            An array of source objects from which the properties need to be
            taken.
  - name: 'delay<T>(number, T)'
    uid: '@azure/core-http.delay'
    package: '@azure/core-http'
    summary: A wrapper for setTimeout that resolves a promise after t milliseconds.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delay<T>(t: number, value?: T)'
      parameters:
        - id: t
          type: number
          description: The number of milliseconds to be delayed.
        - id: value
          type: T
          description: The value to be resolved with after a timeout of t milliseconds.
      return:
        type: Promise&lt;T | void&gt;
        description: Resolved promise
  - name: encodeUri(string)
    uid: '@azure/core-http.encodeUri'
    package: '@azure/core-http'
    summary: Encodes an URI.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function encodeUri(uri: string)'
      parameters:
        - id: uri
          type: string
          description: The URI to be encoded.
      return:
        type: string
        description: The encoded URI.
  - name: 'executePromisesSequentially(Array<any>, unknown)'
    uid: '@azure/core-http.executePromisesSequentially'
    package: '@azure/core-http'
    summary: >-
      Executes an array of promises sequentially. Inspiration of this method is
      here:

      https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An
      awesome blog on promises!
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function executePromisesSequentially(promiseFactories: Array<any>,
        kickstart: unknown)
      parameters:
        - id: promiseFactories
          type: Array&lt;any&gt;
          description: An array of promise factories(A function that return a promise)
        - id: kickstart
          type: unknown
          description: >-
            Input to the first promise that is used to kickstart the promise
            chain.

            If not provided then the promise chain starts with undefined.
      return:
        type: Promise&lt;any&gt;
        description: A chain of resolved or rejected promises
  - name: generateUuid()
    uid: '@azure/core-http.generateUuid'
    package: '@azure/core-http'
    summary: Generated UUID
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function generateUuid()
      return:
        type: string
        description: RFC4122 v4 UUID.
  - name: getEnvironmentValue(string)
    uid: '@azure/core-http.getEnvironmentValue'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getEnvironmentValue(name: string)'
      parameters:
        - id: name
          type: string
          description: ''
      return:
        type: string | undefined
        description: ''
  - name: isDuration(string)
    uid: '@azure/core-http.isDuration'
    package: '@azure/core-http'
    summary: Indicates whether the given string is in ISO 8601 format.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isDuration(value: string)'
      parameters:
        - id: value
          type: string
          description: The value to be validated for ISO 8601 duration format.
      return:
        type: boolean
        description: '`true` if valid, `false` otherwise.'
  - name: isPrimitiveType(unknown)
    uid: '@azure/core-http.isPrimitiveType'
    package: '@azure/core-http'
    summary: |-
      Determines whether the given entity is a basic/primitive type
      (string, number, boolean, null, undefined).
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isPrimitiveType(value: unknown)'
      parameters:
        - id: value
          type: unknown
          description: Any entity
      return:
        type: boolean
        description: 'true is it is primitive type, false otherwise.'
  - name: isValidUuid(string)
    uid: '@azure/core-http.isValidUuid'
    package: '@azure/core-http'
    summary: Validates the given uuid as a string
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isValidUuid(uuid: string)'
      parameters:
        - id: uuid
          type: string
          description: The uuid as a string that needs to be validated
      return:
        type: boolean
        description: True if the uuid is valid; false otherwise.
  - name: 'prepareXMLRootList(unknown, string, string, string)'
    uid: '@azure/core-http.prepareXMLRootList'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function prepareXMLRootList(obj: unknown, elementName: string,
        xmlNamespaceKey?: string, xmlNamespace?: string)
      parameters:
        - id: obj
          type: unknown
          description: ''
        - id: elementName
          type: string
          description: ''
        - id: xmlNamespaceKey
          type: string
          description: ''
        - id: xmlNamespace
          type: string
          description: ''
      return:
        type: '[key: string]\: any'
        description: ''
  - name: promiseToCallback(Promise<any>)
    uid: '@azure/core-http.promiseToCallback'
    package: '@azure/core-http'
    summary: Converts a Promise to a callback.
    remarks: ''
    isPreview: false
    isDeprecated: true
    customDeprecatedMessage: generated code should instead depend on responseToBody
    syntax:
      content: 'function promiseToCallback(promise: Promise<any>)'
      parameters:
        - id: promise
          type: Promise&lt;any&gt;
          description: The Promise to be converted to a callback
      return:
        type: '(cb: Function) =&gt; void'
        description: 'A function that takes the callback `(cb: Function) => void`'
  - name: promiseToServiceCallback<T>(Promise<HttpOperationResponse>)
    uid: '@azure/core-http.promiseToServiceCallback'
    package: '@azure/core-http'
    summary: Converts a Promise to a service callback.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function promiseToServiceCallback<T>(promise:
        Promise<HttpOperationResponse>)
      parameters:
        - id: promise
          type: Promise&lt;<xref uid="@azure/core-http.HttpOperationResponse" />&gt;
          description: >-
            The Promise of HttpOperationResponse to be converted to a service
            callback
      return:
        type: '(cb: ServiceCallback&lt;T&gt;) =&gt; void'
        description: >-
          A function that takes the service callback (cb: ServiceCallback<T>):
          void
  - name: 'replaceAll(string | undefined, string, string)'
    uid: '@azure/core-http.replaceAll'
    package: '@azure/core-http'
    summary: >-
      Replace all of the instances of searchValue in value with the provided
      replaceValue.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function replaceAll(value: string | undefined, searchValue: string,
        replaceValue: string)
      parameters:
        - id: value
          type: string | undefined
          description: The value to search and replace in.
        - id: searchValue
          type: string
          description: The value to search for in the value argument.
        - id: replaceValue
          type: string
          description: The value to replace searchValue with in the value argument.
      return:
        type: string | undefined
        description: >-
          The value where each instance of searchValue was replaced with
          replacedValue.
  - name: stripRequest(WebResourceLike)
    uid: '@azure/core-http.stripRequest'
    package: '@azure/core-http'
    summary: |-
      Returns a stripped version of the Http Request that does not contain the
      Authorization header.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function stripRequest(request: WebResourceLike)'
      parameters:
        - id: request
          type: <xref uid="@azure/core-http.WebResourceLike" />
          description: The Http Request object
      return:
        type: <xref uid="@azure/core-http.WebResourceLike" />
        description: The stripped version of Http Request.
  - name: stripResponse(HttpOperationResponse)
    uid: '@azure/core-http.stripResponse'
    package: '@azure/core-http'
    summary: |-
      Returns a stripped version of the Http Response which only contains body,
      headers and the status.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function stripResponse(response: HttpOperationResponse)'
      parameters:
        - id: response
          type: <xref uid="@azure/core-http.HttpOperationResponse" />
          description: The Http Response
      return:
        type: any
        description: The stripped version of Http Response.
  - name: urlIsHTTPS(Object)
    uid: '@azure/core-http.urlIsHTTPS'
    package: '@azure/core-http'
    summary: Checks if a parsed URL is HTTPS
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function urlIsHTTPS(urlToCheck: Object)'
      parameters:
        - id: urlToCheck
          type: Object
          description: The url to check
      return:
        type: boolean
        description: True if the URL is HTTPS; false otherwise.
  - name: 'parseXML(string, SerializerOptions)'
    uid: '@azure/core-http.parseXML'
    package: '@azure/core-http'
    summary: Converts given XML string into JSON
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function parseXML(str: string, opts?: SerializerOptions)'
      parameters:
        - id: str
          type: string
          description: String containing the XML content to be parsed into JSON
        - id: opts
          type: <xref uid="@azure/core-http.SerializerOptions" />
          description: |
            Options that govern the parsing of given xml string
      return:
        type: Promise&lt;any&gt;
        description: ''
  - name: 'stringifyXML(unknown, SerializerOptions)'
    uid: '@azure/core-http.stringifyXML'
    package: '@azure/core-http'
    summary: Converts given JSON object to XML string
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function stringifyXML(obj: unknown, opts?: SerializerOptions)'
      parameters:
        - id: obj
          type: unknown
          description: JSON object to be converted into XML string
        - id: opts
          type: <xref uid="@azure/core-http.SerializerOptions" />
          description: |
            Options that govern the parsing of given JSON object
      return:
        type: string
        description: ''
  - name: isWebResourceLike(unknown)
    uid: '@azure/core-http.isWebResourceLike'
    package: '@azure/core-http'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isWebResourceLike(object: unknown)'
      parameters:
        - id: object
          type: unknown
          description: ''
      return:
        type: boolean
        description: ''
enums:
  - '@azure/core-http.HttpPipelineLogLevel'
  - '@azure/core-http.RetryMode'
  - '@azure/core-http.QueryCollectionFormat'
