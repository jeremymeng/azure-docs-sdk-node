### YamlMime:TSType
name: CommunicationIdentityClient
uid: '@azure/communication-identity.CommunicationIdentityClient'
package: '@azure/communication-identity'
summary: >-
  Client class for interacting with Azure Communication Services User Token
  Management.
fullName: CommunicationIdentityClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'CommunicationIdentityClient(string, CommunicationIdentityClientOptions)'
    uid: '@azure/communication-identity.CommunicationIdentityClient.constructor'
    package: '@azure/communication-identity'
    summary: Initializes a new instance of the CommunicationIdentity class.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(connectionString: string, options?:
        CommunicationIdentityClientOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Connection string to connect to an Azure Communication Service
            resource.
                                    Example: "endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret";
        - id: options
          type: >-
            <xref
            uid="@azure/communication-identity.CommunicationIdentityClientOptions"
            />
          description: |
            Optional. Options to configure the HTTP pipeline.
  - name: >-
      CommunicationIdentityClient(string, KeyCredential,
      CommunicationIdentityClientOptions)
    uid: '@azure/communication-identity.CommunicationIdentityClient.constructor_1'
    package: '@azure/communication-identity'
    summary: >-
      Initializes a new instance of the CommunicationIdentity class using an
      Azure KeyCredential.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(endpoint: string, credential:
        KeyCredential, options?: CommunicationIdentityClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: KeyCredential
          description: >-
            An object that is used to authenticate requests to the service. Use
            the AzureKeyCredential or `@azure/identity` to create a credential.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-identity.CommunicationIdentityClientOptions"
            />
          description: |
            Optional. Options to configure the HTTP pipeline.
  - name: >-
      CommunicationIdentityClient(string, TokenCredential,
      CommunicationIdentityClientOptions)
    uid: '@azure/communication-identity.CommunicationIdentityClient.constructor_2'
    package: '@azure/communication-identity'
    summary: >-
      Initializes a new instance of the CommunicationIdentity class using a
      TokenCredential.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new CommunicationIdentityClient(endpoint: string, credential:
        TokenCredential, options?: CommunicationIdentityClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: >-
            The endpoint of the service (ex:
            https://contoso.eastus.communications.azure.net).
        - id: credential
          type: TokenCredential
          description: >-
            An object that is used to authenticate requests to the service. Use
            the AzureKeyCredential or `@azure/identity` to create a credential.
        - id: options
          type: >-
            <xref
            uid="@azure/communication-identity.CommunicationIdentityClientOptions"
            />
          description: |
            Optional. Options to configure the HTTP pipeline.
methods:
  - name: createUser(OperationOptions)
    uid: '@azure/communication-identity.CommunicationIdentityClient.createUser'
    package: '@azure/communication-identity'
    summary: Creates a single user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createUser(options?: OperationOptions)'
      parameters:
        - id: options
          type: OperationOptions
          description: |
            Additional options for the request.
      return:
        type: Promise&lt;CommunicationUserIdentifier&gt;
        description: ''
  - name: 'createUserAndToken(TokenScope[], OperationOptions)'
    uid: >-
      @azure/communication-identity.CommunicationIdentityClient.createUserAndToken
    package: '@azure/communication-identity'
    summary: Creates a single user and a token simultaneously.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createUserAndToken(scopes: TokenScope[], options?:
        OperationOptions)
      parameters:
        - id: scopes
          type: '<xref uid="@azure/communication-identity.TokenScope" />[]'
          description: Scopes to include in the token.
        - id: options
          type: OperationOptions
          description: |
            Additional options for the request.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-identity.CommunicationUserToken" />&gt;
        description: ''
  - name: 'deleteUser(CommunicationUserIdentifier, OperationOptions)'
    uid: '@azure/communication-identity.CommunicationIdentityClient.deleteUser'
    package: '@azure/communication-identity'
    summary: Triggers revocation event for user and deletes all its data.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteUser(user: CommunicationUserIdentifier, options?:
        OperationOptions)
      parameters:
        - id: user
          type: CommunicationUserIdentifier
          description: The user being deleted.
        - id: options
          type: OperationOptions
          description: |
            Additional options for the request.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getToken(CommunicationUserIdentifier, TokenScope[], OperationOptions)'
    uid: '@azure/communication-identity.CommunicationIdentityClient.getToken'
    package: '@azure/communication-identity'
    summary: Creates a scoped user token.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getToken(user: CommunicationUserIdentifier, scopes:
        TokenScope[], options?: OperationOptions)
      parameters:
        - id: user
          type: CommunicationUserIdentifier
          description: The user whose tokens are being issued.
        - id: scopes
          type: '<xref uid="@azure/communication-identity.TokenScope" />[]'
          description: Scopes to include in the token.
        - id: options
          type: OperationOptions
          description: |
            Additional options for the request.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-identity.CommunicationAccessToken" />&gt;
        description: ''
  - name: 'revokeTokens(CommunicationUserIdentifier, OperationOptions)'
    uid: '@azure/communication-identity.CommunicationIdentityClient.revokeTokens'
    package: '@azure/communication-identity'
    summary: Revokes all data and tokens created for a user.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function revokeTokens(user: CommunicationUserIdentifier, options?:
        OperationOptions)
      parameters:
        - id: user
          type: CommunicationUserIdentifier
          description: The user whose tokens are being revoked.
        - id: options
          type: OperationOptions
          description: |
            Additional options for the request.
      return:
        type: Promise&lt;void&gt;
        description: ''
