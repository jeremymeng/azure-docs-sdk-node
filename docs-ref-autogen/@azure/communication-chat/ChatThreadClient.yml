### YamlMime:TSType
name: ChatThreadClient
uid: '@azure/communication-chat.ChatThreadClient'
package: '@azure/communication-chat'
summary: The client to do chat operations
fullName: ChatThreadClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      ChatThreadClient(string, string, CommunicationTokenCredential,
      ChatThreadClientOptions)
    uid: '@azure/communication-chat.ChatThreadClient.constructor'
    package: '@azure/communication-chat'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ChatThreadClient(endpoint: string, threadId: string, credential:
        CommunicationTokenCredential, options?: ChatThreadClientOptions)
      parameters:
        - id: endpoint
          type: string
          description: ''
        - id: threadId
          type: string
          description: ''
        - id: credential
          type: CommunicationTokenCredential
          description: ''
        - id: options
          type: <xref uid="@azure/communication-chat.ChatThreadClientOptions" />
          description: ''
properties:
  - name: threadId
    uid: '@azure/communication-chat.ChatThreadClient.threadId'
    package: '@azure/communication-chat'
    summary: Thread ID of the ChatThreadClient
    fullName: threadId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'threadId: string'
      return:
        type: string
        description: ''
methods:
  - name: 'addParticipants(AddParticipantsRequest, AddParticipantsOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.addParticipants'
    package: '@azure/communication-chat'
    summary: >-
      Adds the details of chat participants belonging to the thread identified
      by threadId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function addParticipants(request: AddParticipantsRequest, options?:
        AddParticipantsOptions)
      parameters:
        - id: request
          type: <xref uid="@azure/communication-chat.AddParticipantsRequest" />
          description: Thread participants' details to add in the thread roster
        - id: options
          type: <xref uid="@azure/communication-chat.AddParticipantsOptions" />
          description: |
            Operation options.
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/communication-chat.AddChatParticipantsResult" />&gt;
        description: ''
  - name: 'deleteMessage(string, DeleteMessageOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.deleteMessage'
    package: '@azure/communication-chat'
    summary: Deletes a message identified by threadId and messageId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMessage(messageId: string, options?:
        DeleteMessageOptions)
      parameters:
        - id: messageId
          type: string
          description: The message id of the message.
        - id: options
          type: <xref uid="@azure/communication-chat.DeleteMessageOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'getMessage(string, GetMessageOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.getMessage'
    package: '@azure/communication-chat'
    summary: |-
      Gets a chat message identified by messageId.
      Returns the specific message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getMessage(messageId: string, options?: GetMessageOptions)'
      parameters:
        - id: messageId
          type: string
          description: The message id of the message.
        - id: options
          type: <xref uid="@azure/communication-chat.GetMessageOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;<xref uid="@azure/communication-chat.ChatMessage" />&gt;
        description: ''
  - name: getProperties(GetPropertiesOptions)
    uid: '@azure/communication-chat.ChatThreadClient.getProperties'
    package: '@azure/communication-chat'
    summary: |-
      Gets a chat thread.
      Returns the chat thread.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(options?: GetPropertiesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-chat.GetPropertiesOptions" />
          description: |
            Operation options.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/communication-chat.ChatThreadProperties"
          />&gt;
        description: ''
  - name: listMessages(ListMessagesOptions)
    uid: '@azure/communication-chat.ChatThreadClient.listMessages'
    package: '@azure/communication-chat'
    summary: |-
      Gets a list of message from a thread identified by threadId.
      Returns the list of the messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listMessages(options?: ListMessagesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-chat.ListMessagesOptions" />
          description: |
            Get messages options.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/communication-chat.ChatMessage" />&gt;
        description: ''
  - name: listParticipants(ListParticipantsOptions)
    uid: '@azure/communication-chat.ChatThreadClient.listParticipants'
    package: '@azure/communication-chat'
    summary: |-
      Gets the participants of the thread identified by threadId.
      Returns the lists of the participants.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listParticipants(options?: ListParticipantsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-chat.ListParticipantsOptions" />
          description: |
            Operation options.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/communication-chat.ChatParticipant" />&gt;
        description: ''
  - name: listReadReceipts(ListReadReceiptsOptions)
    uid: '@azure/communication-chat.ChatThreadClient.listReadReceipts'
    package: '@azure/communication-chat'
    summary: |-
      Gets a list of read receipt from a thread identified by threadId.
      Returns the list of the messages.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listReadReceipts(options?: ListReadReceiptsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-chat.ListReadReceiptsOptions" />
          description: |
            Get messages options.
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/communication-chat.ChatMessageReadReceipt" />&gt;
        description: ''
  - name: 'removeParticipant(CommunicationIdentifier, RemoveParticipantOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.removeParticipant'
    package: '@azure/communication-chat'
    summary: Removes participant from the thread identified by threadId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeParticipant(participant: CommunicationIdentifier,
        options?: RemoveParticipantOptions)
      parameters:
        - id: participant
          type: CommunicationIdentifier
          description: Thread participant to remove from the thread roster
        - id: options
          type: <xref uid="@azure/communication-chat.RemoveParticipantOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'sendMessage(SendMessageRequest, SendMessageOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.sendMessage'
    package: '@azure/communication-chat'
    summary: |-
      Sends a chat message to a thread identified by threadId.
      Returns the id of the created message.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendMessage(request: SendMessageRequest, options?:
        SendMessageOptions)
      parameters:
        - id: request
          type: <xref uid="@azure/communication-chat.SendMessageRequest" />
          description: Request for sending a message.
        - id: options
          type: <xref uid="@azure/communication-chat.SendMessageOptions" />
          description: |
            Operation options.
      return:
        type: >-
          Promise&lt;<xref uid="@azure/communication-chat.SendChatMessageResult"
          />&gt;
        description: ''
  - name: 'sendReadReceipt(SendReadReceiptRequest, SendReadReceiptOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.sendReadReceipt'
    package: '@azure/communication-chat'
    summary: Sends a read receipt to the thread identified by threadId.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendReadReceipt(request: SendReadReceiptRequest, options?:
        SendReadReceiptOptions)
      parameters:
        - id: request
          type: <xref uid="@azure/communication-chat.SendReadReceiptRequest" />
          description: Request for sending a read receipt
        - id: options
          type: <xref uid="@azure/communication-chat.SendReadReceiptOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: sendTypingNotification(SendTypingNotificationOptions)
    uid: '@azure/communication-chat.ChatThreadClient.sendTypingNotification'
    package: '@azure/communication-chat'
    summary: >-
      Sends a typing notification to the thread.

      Doesn't attempt to send if the time since last notification is smaller
      than the minimum typing interval
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendTypingNotification(options?: SendTypingNotificationOptions)'
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/communication-chat.SendTypingNotificationOptions"
            />
          description: '- Operation options'
      return:
        type: Promise&lt;boolean&gt;
        description: >-
          True if the typing message notification could be sent, otherwise
          false.
  - name: 'updateMessage(string, UpdateMessageOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.updateMessage'
    package: '@azure/communication-chat'
    summary: Updates a message identified by threadId and messageId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, options?:
        UpdateMessageOptions)
      parameters:
        - id: messageId
          type: string
          description: The message id of the message.
        - id: options
          type: <xref uid="@azure/communication-chat.UpdateMessageOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: 'updateTopic(string, UpdateTopicOptions)'
    uid: '@azure/communication-chat.ChatThreadClient.updateTopic'
    package: '@azure/communication-chat'
    summary: Updates a thread's topic.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function updateTopic(topic: string, options?: UpdateTopicOptions)'
      parameters:
        - id: topic
          type: string
          description: The topic needs to be updated to.
        - id: options
          type: <xref uid="@azure/communication-chat.UpdateTopicOptions" />
          description: |
            Operation options.
      return:
        type: Promise&lt;void&gt;
        description: ''
