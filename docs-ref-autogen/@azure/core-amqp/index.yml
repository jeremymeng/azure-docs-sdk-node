### YamlMime:TSPackage
uid: '@azure/core-amqp'
name: '@azure/core-amqp'
summary: ''
type: package
enums:
  - '@azure/core-amqp.ConditionErrorNameMapper'
  - '@azure/core-amqp.ErrorNameConditionMapper'
  - '@azure/core-amqp.RetryMode'
  - '@azure/core-amqp.RetryOperationType'
  - '@azure/core-amqp.SystemErrorConditionMapper'
  - '@azure/core-amqp.TokenType'
classes:
  - '@azure/core-amqp.CbsClient'
  - '@azure/core-amqp.MessagingError'
  - '@azure/core-amqp.RequestResponseLink'
interfaces:
  - '@azure/core-amqp.AmqpAnnotatedMessage'
  - '@azure/core-amqp.AmqpMessageHeader'
  - '@azure/core-amqp.AmqpMessageProperties'
  - '@azure/core-amqp.CbsResponse'
  - '@azure/core-amqp.ConnectionConfig'
  - '@azure/core-amqp.ConnectionConfigOptions'
  - '@azure/core-amqp.ConnectionContextBase'
  - '@azure/core-amqp.ConnectionProperties'
  - '@azure/core-amqp.CreateConnectionContextBaseParameters'
  - '@azure/core-amqp.NetworkSystemError'
  - '@azure/core-amqp.RetryConfig'
  - '@azure/core-amqp.RetryOptions'
  - '@azure/core-amqp.SendRequestOptions'
  - '@azure/core-amqp.WebSocketOptions'
typeAliases:
  - '@azure/core-amqp.ParsedOutput'
functions:
  - name: 'delay<T>(number, AbortSignalLike, string, T)'
    uid: '@azure/core-amqp.delay'
    package: '@azure/core-amqp'
    summary: A wrapper for setTimeout that resolves a promise after t milliseconds.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delay<T>(delayInMs: number, abortSignal?: AbortSignalLike,
        abortErrorMsg?: string, value?: T)
      parameters:
        - id: delayInMs
          type: number
          description: The number of milliseconds to be delayed.
        - id: abortSignal
          type: AbortSignalLike
          description: The abortSignal associated with containing operation.
        - id: abortErrorMsg
          type: string
          description: The abort error message associated with containing operation.
        - id: value
          type: T
          description: The value to be resolved with after a timeout of t milliseconds.
      return:
        type: Promise&lt;T | void&gt;
        description: '- Resolved promise'
  - name: isMessagingError(Error | MessagingError)
    uid: '@azure/core-amqp.isMessagingError'
    package: '@azure/core-amqp'
    summary: Determines if an error is a MessagingError.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isMessagingError(error: Error | MessagingError)'
      parameters:
        - id: error
          type: Error | <xref uid="@azure/core-amqp.MessagingError" />
          description: |
            An error that can either be an Error or a MessagingError.
      return:
        type: boolean
        description: ''
  - name: isSystemError(unknown)
    uid: '@azure/core-amqp.isSystemError'
    package: '@azure/core-amqp'
    summary: Checks whether the provided error is a node.js SystemError.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function isSystemError(err: unknown)'
      parameters:
        - id: err
          type: unknown
          description: |
            An object that may contain error information.
      return:
        type: boolean
        description: ''
  - name: parseConnectionString<T>(string)
    uid: '@azure/core-amqp.parseConnectionString'
    package: '@azure/core-amqp'
    summary: >
      Parses the connection string and returns an object of type T.

      Connection strings have the following syntax:


      ConnectionString ::= `Part { ";" Part } [ ";" ] [ WhiteSpace ]`

      Part             ::= [ PartLiteral [ "=" PartLiteral ] ]

      PartLiteral      ::= [ WhiteSpace ] Literal [ WhiteSpace ]

      Literal          ::= ? any sequence of characters except ; or = or
      WhiteSpace ?

      WhiteSpace       ::= ? all whitespace characters including `\r` and `\n` ?
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function parseConnectionString<T>(connectionString: string)'
      parameters:
        - id: connectionString
          type: string
          description: The connection string to be parsed.
      return:
        type: <xref uid="@azure/core-amqp.ParsedOutput" />&lt;T&gt;
        description: ParsedOutput<T>.
  - name: retry<T>(RetryConfig<T>)
    uid: '@azure/core-amqp.retry'
    package: '@azure/core-amqp'
    summary: >
      Every operation is attempted at least once. Additional attempts are made
      if the previous attempt failed

      with a retryable error. The number of additional attempts is governed by
      the `maxRetries` property provided

      on the `RetryConfig` argument.

      If `mode` option is set to `Fixed`, then the retries are made on the

      given operation for a specified number of times, with a fixed delay in
      between each retry each time.


      If `mode` option is set to `Exponential`, then the delay between retries
      is adjusted to increase

      exponentially with each attempt using back-off factor of power 2.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function retry<T>(config: RetryConfig<T>)'
      parameters:
        - id: config
          type: <xref uid="@azure/core-amqp.RetryConfig" />&lt;T&gt;
          description: |
            Parameters to configure retry operation
      return:
        type: Promise&lt;T&gt;
        description: Promise<T>.
  - name: translate(AmqpError | Error)
    uid: '@azure/core-amqp.translate'
    package: '@azure/core-amqp'
    summary: >-
      Translates the AMQP error received at the protocol layer or a SystemError
      into a MessagingError.

      All other errors are returned unaltered.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function translate(err: AmqpError | Error)'
      parameters:
        - id: err
          type: AmqpError | Error
          description: The amqp error that was received.
      return:
        type: <xref uid="@azure/core-amqp.MessagingError" /> | Error
        description: MessagingError object.
