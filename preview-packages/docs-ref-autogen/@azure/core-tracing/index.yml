### YamlMime:TSPackage
uid: '@azure/core-tracing'
name: '@azure/core-tracing'
summary: ''
type: package
enums:
  - '@azure/core-tracing.SpanKind'
  - '@azure/core-tracing.SpanStatusCode'
  - '@azure/core-tracing.TraceFlags'
classes:
  - '@azure/core-tracing.NoOpSpan'
  - '@azure/core-tracing.NoOpTracer'
  - '@azure/core-tracing.OpenCensusSpanWrapper'
  - '@azure/core-tracing.OpenCensusTracerWrapper'
  - '@azure/core-tracing.TestSpan'
  - '@azure/core-tracing.TestTracer'
interfaces:
  - '@azure/core-tracing.Context'
  - '@azure/core-tracing.ContextAPI'
  - '@azure/core-tracing.ExceptionWithCode'
  - '@azure/core-tracing.ExceptionWithMessage'
  - '@azure/core-tracing.ExceptionWithName'
  - '@azure/core-tracing.Link'
  - '@azure/core-tracing.OperationTracingOptions'
  - '@azure/core-tracing.Span'
  - '@azure/core-tracing.SpanAttributes'
  - '@azure/core-tracing.SpanContext'
  - '@azure/core-tracing.SpanGraph'
  - '@azure/core-tracing.SpanGraphNode'
  - '@azure/core-tracing.SpanOptions'
  - '@azure/core-tracing.SpanStatus'
  - '@azure/core-tracing.TraceState'
  - '@azure/core-tracing.Tracer'
typeAliases:
  - '@azure/core-tracing.Exception'
  - '@azure/core-tracing.HrTime'
  - '@azure/core-tracing.LinkContext'
  - '@azure/core-tracing.SpanAttributeValue'
  - '@azure/core-tracing.TimeInput'
functions:
  - name: extractSpanContextFromTraceParentHeader(string)
    uid: '@azure/core-tracing.extractSpanContextFromTraceParentHeader'
    package: '@azure/core-tracing'
    summary: Generates a `SpanContext` given a `traceparent` header value.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function extractSpanContextFromTraceParentHeader(traceParentHeader:
        string)
      parameters:
        - id: traceParentHeader
          type: string
          description: ''
      return:
        type: <xref uid="@azure/core-tracing.SpanContext" /> | undefined
        description: The `SpanContext` generated from the `traceparent` value.
  - name: getSpan(Context)
    uid: '@azure/core-tracing.getSpan'
    package: '@azure/core-tracing'
    summary: Return the span if one exists
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSpan(context: Context)'
      parameters:
        - id: context
          type: <xref uid="@azure/core-tracing.Context" />
          description: |
            context to get span from
      return:
        type: <xref uid="@azure/core-tracing.Span" /> | undefined
        description: ''
  - name: getSpanContext(Context)
    uid: '@azure/core-tracing.getSpanContext'
    package: '@azure/core-tracing'
    summary: Get the span context of the span if it exists.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getSpanContext(context: Context)'
      parameters:
        - id: context
          type: <xref uid="@azure/core-tracing.Context" />
          description: |
            context to get values from
      return:
        type: <xref uid="@azure/core-tracing.SpanContext" /> | undefined
        description: ''
  - name: getTraceParentHeader(SpanContext)
    uid: '@azure/core-tracing.getTraceParentHeader'
    package: '@azure/core-tracing'
    summary: Generates a `traceparent` value given a span context.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTraceParentHeader(spanContext: SpanContext)'
      parameters:
        - id: spanContext
          type: <xref uid="@azure/core-tracing.SpanContext" />
          description: Contains context for a specific span.
      return:
        type: string | undefined
        description: The `spanContext` represented as a `traceparent` value.
  - name: getTracer()
    uid: '@azure/core-tracing.getTracer'
    package: '@azure/core-tracing'
    summary: |-
      Retrieves the active tracer, or returns a
      no-op implementation if one is not set.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getTracer()
      return:
        type: <xref uid="@azure/core-tracing.Tracer" />
        description: ''
  - name: 'setSpan(Context, Span)'
    uid: '@azure/core-tracing.setSpan'
    package: '@azure/core-tracing'
    summary: Set the span on a context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setSpan(context: Context, span: Span)'
      parameters:
        - id: context
          type: <xref uid="@azure/core-tracing.Context" />
          description: context to use as parent
        - id: span
          type: <xref uid="@azure/core-tracing.Span" />
          description: |
            span to set active
      return:
        type: <xref uid="@azure/core-tracing.Context" />
        description: ''
  - name: 'setSpanContext(Context, SpanContext)'
    uid: '@azure/core-tracing.setSpanContext'
    package: '@azure/core-tracing'
    summary: |-
      Wrap span context in a NoopSpan and set as span in a new
      context
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setSpanContext(context: Context, spanContext: SpanContext)'
      parameters:
        - id: context
          type: <xref uid="@azure/core-tracing.Context" />
          description: context to set active span on
        - id: spanContext
          type: <xref uid="@azure/core-tracing.SpanContext" />
          description: |
            span context to be wrapped
      return:
        type: <xref uid="@azure/core-tracing.Context" />
        description: ''
  - name: setTracer(Tracer)
    uid: '@azure/core-tracing.setTracer'
    package: '@azure/core-tracing'
    summary: 'Sets the global tracer, enabling tracing for the Azure SDK.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setTracer(tracer: Tracer)'
      parameters:
        - id: tracer
          type: <xref uid="@azure/core-tracing.Tracer" />
          description: |
            An OpenTelemetry Tracer instance.
